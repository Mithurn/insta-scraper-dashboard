{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useQuery } from 'react-query';\nimport { api } from '../services/api';\nexport const useProfiles = () => {\n  _s();\n  return useQuery('profiles', () => api.getProfiles(), {\n    refetchInterval: 30000 // Refetch every 30 seconds\n  });\n};\n_s(useProfiles, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useRankedProfiles = (sortBy = 'followers_count', order = 'desc') => {\n  _s2();\n  return useQuery(['ranked-profiles', sortBy, order], () => api.getRankedProfiles(sortBy, order), {\n    refetchInterval: 30000 // Refetch every 30 seconds\n  });\n};\n_s2(useRankedProfiles, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useProfile = username => {\n  _s3();\n  return useQuery(['profile', username], () => api.getProfile(username), {\n    enabled: !!username\n  });\n};\n_s3(useProfile, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["useQuery","api","useProfiles","_s","getProfiles","refetchInterval","useRankedProfiles","sortBy","order","_s2","getRankedProfiles","useProfile","username","_s3","getProfile","enabled"],"sources":["/Users/mithurnjeromme/Desktop/instascrape/frontend/src/hooks/useProfiles.ts"],"sourcesContent":["import { useQuery } from 'react-query';\nimport { api } from '../services/api';\n\nexport interface Profile {\n  id: number;\n  username: string;\n  profile_name: string | null;\n  followers_count: number;\n  following_count: number;\n  posts_count: number;\n  engagement_rate: number;\n  bio: string | null;\n  profile_pic_url: string | null;\n  is_verified: number;\n  is_private: number;\n  last_updated: string;\n  created_at: string;\n}\n\nexport interface ProfileRanking {\n  rank: number;\n  username: string;\n  profile_name: string | null;\n  followers_count: number;\n  following_count: number;\n  posts_count: number;\n  engagement_rate: number;\n  is_verified: number;\n  last_updated: string;\n}\n\nexport const useProfiles = () => {\n  return useQuery<Profile[]>('profiles', () => api.getProfiles(), {\n    refetchInterval: 30000, // Refetch every 30 seconds\n  });\n};\n\nexport const useRankedProfiles = (sortBy: string = 'followers_count', order: string = 'desc') => {\n  return useQuery<ProfileRanking[]>(\n    ['ranked-profiles', sortBy, order],\n    () => api.getRankedProfiles(sortBy, order),\n    {\n      refetchInterval: 30000, // Refetch every 30 seconds\n    }\n  );\n};\n\nexport const useProfile = (username: string) => {\n  return useQuery<Profile>(\n    ['profile', username],\n    () => api.getProfile(username),\n    {\n      enabled: !!username,\n    }\n  );\n};\n"],"mappings":";;;AAAA,SAASA,QAAQ,QAAQ,aAAa;AACtC,SAASC,GAAG,QAAQ,iBAAiB;AA8BrC,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,OAAOH,QAAQ,CAAY,UAAU,EAAE,MAAMC,GAAG,CAACG,WAAW,CAAC,CAAC,EAAE;IAC9DC,eAAe,EAAE,KAAK,CAAE;EAC1B,CAAC,CAAC;AACJ,CAAC;AAACF,EAAA,CAJWD,WAAW;EAAA,QACfF,QAAQ;AAAA;AAKjB,OAAO,MAAMM,iBAAiB,GAAGA,CAACC,MAAc,GAAG,iBAAiB,EAAEC,KAAa,GAAG,MAAM,KAAK;EAAAC,GAAA;EAC/F,OAAOT,QAAQ,CACb,CAAC,iBAAiB,EAAEO,MAAM,EAAEC,KAAK,CAAC,EAClC,MAAMP,GAAG,CAACS,iBAAiB,CAACH,MAAM,EAAEC,KAAK,CAAC,EAC1C;IACEH,eAAe,EAAE,KAAK,CAAE;EAC1B,CACF,CAAC;AACH,CAAC;AAACI,GAAA,CARWH,iBAAiB;EAAA,QACrBN,QAAQ;AAAA;AASjB,OAAO,MAAMW,UAAU,GAAIC,QAAgB,IAAK;EAAAC,GAAA;EAC9C,OAAOb,QAAQ,CACb,CAAC,SAAS,EAAEY,QAAQ,CAAC,EACrB,MAAMX,GAAG,CAACa,UAAU,CAACF,QAAQ,CAAC,EAC9B;IACEG,OAAO,EAAE,CAAC,CAACH;EACb,CACF,CAAC;AACH,CAAC;AAACC,GAAA,CARWF,UAAU;EAAA,QACdX,QAAQ;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}